version: '3.7'
#Docker Networks
networks:
  app-network:
    driver: bridge

services:

  #PHP Service
  app:
    build:
      args:
        user: www
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: laravel-image
    container_name: app
    restart: unless-stopped
    working_dir: /var/www
    tty: true
    environment:
      SERVICE_TAGS: dev
      SERVICE_NAME: app
      APP_ENV: local
    volumes:
      - ./:/var/www
      - .docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network


  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - .docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
      - dbserver
    networks:
      - app-network


  #MySQL Service
  dbserver:
    image: mysql:8.0
    container_name: dbserver
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: '%'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - .docker/mysql/my.cnf:/etc/mysql/my.cnf
      - .docker/mysql/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
      - .docker/mysql/mysql-files:/var/lib/mysql-files
    networks:
      - app-network

  # Caching service
  redis:
    image: redis
